//--------------------------------------------------------------------------------
//  エネミーコントローラ
//　enemy controller.h
//  Author : Xu Wenjie
//--------------------------------------------------------------------------------
#pragma once
#include "actor_controller.h"

//--------------------------------------------------------------------------------
//  前方宣言
//--------------------------------------------------------------------------------
class EnemyState;

//--------------------------------------------------------------------------------
//  構造体定義
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//  クラス宣言
//--------------------------------------------------------------------------------
class EnemyController : public ActorController
{
public:
    //--------------------------------------------------------------------------------
    //  constructors for singleton
    //--------------------------------------------------------------------------------
    EnemyController(GameObject& owner, Rigidbody3D& rigidbody, Animator& animator);
    ~EnemyController() {}

    //--------------------------------------------------------------------------------
    //  初期化処理
    //--------------------------------------------------------------------------------
    bool Init(void) override;

    //--------------------------------------------------------------------------------
    //  終了処理
    //--------------------------------------------------------------------------------
    void Uninit(void) override;

    //--------------------------------------------------------------------------------
    //  更新処理
    //--------------------------------------------------------------------------------
    void Update(void) override;

    //--------------------------------------------------------------------------------
    //  後更新処理
    //--------------------------------------------------------------------------------
    void LateUpdate(void) override;

    //--------------------------------------------------------------------------------
    //  コライダートリガーの時呼ばれる
    //--------------------------------------------------------------------------------
    void OnTrigger(Collider& self, Collider& other) override;

    //--------------------------------------------------------------------------------
    //  コライダー衝突の時呼ばれる
    //--------------------------------------------------------------------------------
    void OnCollision(CollisionInfo& info) override;

    //--------------------------------------------------------------------------------
    //  ステートの変換
    //--------------------------------------------------------------------------------
    void Change(EnemyState* state);

    //--------------------------------------------------------------------------------
    //  セッター
    //--------------------------------------------------------------------------------
    void SetTarget(GameObject* target) { target_ = target; }

    //--------------------------------------------------------------------------------
    //  ゲッター
    //--------------------------------------------------------------------------------
    const String& GetCurrentStateName(void) const override;
    const auto&   GetTarget(void) const { return target_; }

private:
    //--------------------------------------------------------------------------------
    //  変数定義
    //--------------------------------------------------------------------------------
    EnemyState* current_state_;
    GameObject* target_;
};