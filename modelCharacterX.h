//--------------------------------------------------------------------------------
//
//　modelCharacter.h
//	Author : Xu Wenjie
//	Date   : 2017-01-23
//--------------------------------------------------------------------------------
//  Update : 
//	
//--------------------------------------------------------------------------------
#ifndef _MODEL_CHARACTOR_H_
#define _MODEL_CHARACTOR_H_

//--------------------------------------------------------------------------------
//  インクルードファイル
//--------------------------------------------------------------------------------
#include "materialManager.h"

//--------------------------------------------------------------------------------
//  前方宣言
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//  クラス宣言
//--------------------------------------------------------------------------------
class CModelCharacterX : public CModel
{
public:
	//--------------------------------------------------------------------------------
	//  構造体定義
	//--------------------------------------------------------------------------------
	struct MOTION_INFO
	{
		int nMotionNow;		//今のモーション
		int nKeyNow;		//今のキーフレーム
		int nCntFrame;
	};

	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	CModelCharacterX();
	~CModelCharacterX() {}

	KFRESULT	Init(const LPCSTR &pTxtPath);
	void		Uninit(void);
	void		Draw(const CKFVec3 &vPosParents, const CKFVec3 &vRotParents, const MOTION_INFO &info);
	void		Draw(const CKFVec3 &vPosParents, const CKFVec3 &vRotParents, const MOTION_INFO &info, const CMM::MATERIAL &matType);

	static CModelCharacterX *Create(const LPCSTR pTxtPath);
private:
	//--------------------------------------------------------------------------------
	//  構造体定義
	//--------------------------------------------------------------------------------
	struct KEY_FRAME
	{
		int		nFrame;
		CKFVec3 vPos;
		CKFVec3 vRot;
	};

	struct MOTION
	{
		bool					bLoop;			//ループフラッグ
		std::vector<KEY_FRAME>	vectorKeyFrame;	//Key Frame情報
	};

	struct PARTS
	{
		std::vector<MOTION>	vectorMotion;	//Motion情報
		XFILE				XFileInfo;		//Xfile情報
		CKFVec3				vPos;			//位置
		CKFVec3				vRot;			//回転
		int					nParentID;		//親のID
	};

	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	
	//--------------------------------------------------------------------------------
	//  変数定義
	//--------------------------------------------------------------------------------
	std::vector<PARTS>		m_vectorParts;			//パーツ
	float					m_fMoveSpeed;
	float					m_fJumpSpeed;
	float					m_fRadius;
};

#endif