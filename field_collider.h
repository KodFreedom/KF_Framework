//--------------------------------------------------------------------------------
//	fieldColliderコンポネント
//　fieldCollider.h
//	Author : Xu Wenjie
//--------------------------------------------------------------------------------
#pragma once
#include "collider.h"

//--------------------------------------------------------------------------------
//  構造体定義
//--------------------------------------------------------------------------------
struct PolygonInfo
{
	Vector3 left_up;
	Vector3 right_down;
	Vector3 side;
	Vector3 normal;
};

struct VertexesInRange
{
	int vertex_number_x;
	int vertex_number_z;
	vector<Vector3> vertexes;
};

//--------------------------------------------------------------------------------
//  クラス宣言
//--------------------------------------------------------------------------------
class FieldCollider : public Collider
{
public:
	//--------------------------------------------------------------------------------
	//  constructors and destructors
	//--------------------------------------------------------------------------------
	FieldCollider(GameObject& owner, const String& field_name)
		: Collider(owner, kField, kStatic)
		, block_number_x_(0)
		, block_number_z_(0)
		, block_size_(Vector2::kZero)
	{
		Load(field_name);
	}
	~FieldCollider() {}

	//--------------------------------------------------------------------------------
	//  破棄処理
	//--------------------------------------------------------------------------------
	void Uninit(void) override
	{
		vertexes_.clear();
		Collider::Uninit();
	}

	//--------------------------------------------------------------------------------
	//  更新処理
	//--------------------------------------------------------------------------------
	void Update(void) override { Awake(); }

	//--------------------------------------------------------------------------------
	//  ポイント所属するポリゴンの情報を取得
	//  範囲外の場合nullを返す
	//--------------------------------------------------------------------------------
	PolygonInfo* GetPolygonAt(const Vector3& point) const;

	//--------------------------------------------------------------------------------
	//  範囲内の頂点データを取得する
	//  範囲外の場合nullを返す
	//--------------------------------------------------------------------------------
	VertexesInRange* GetVertexesInRange(const Vector3& begin, const Vector3& end) const;

private:
	//--------------------------------------------------------------------------------
	//  ファイルから頂点データを読み込む
	//--------------------------------------------------------------------------------
	void Load(const String& field_name);
	
	//--------------------------------------------------------------------------------
	//  変数定義
	//--------------------------------------------------------------------------------
	int	block_number_x_;
	int	block_number_z_;
	Vector2 block_size_;
	vector<Vector3>	vertexes_;
};