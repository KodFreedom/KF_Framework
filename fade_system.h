//--------------------------------------------------------------------------------
//　fade_system.h
//  manage the materials' save, load
//	マテリアル管理者
//	Author : 徐文杰(KodFreedom)
//--------------------------------------------------------------------------------
#pragma once
#include "main.h"

//--------------------------------------------------------------------------------
//  前方宣言
//--------------------------------------------------------------------------------
class Mode;

//--------------------------------------------------------------------------------
//  フェイドシステムクラス
//--------------------------------------------------------------------------------
class FadeSystem
{
public:
	//--------------------------------------------------------------------------------
	//  生成処理
	//  return : FadeSystem*
	//--------------------------------------------------------------------------------
	static FadeSystem* Create(void)
	{
		auto instance = MY_NEW FadeSystem();
		instance->Init();
		return instance;
	}

	//--------------------------------------------------------------------------------
	//  破棄処理
	//--------------------------------------------------------------------------------
	void Release(void) 
    {
        Uninit();
        MY_DELETE this;
    }
	
	//--------------------------------------------------------------------------------
	//  更新処理
	//--------------------------------------------------------------------------------
	void Update(void);

	//--------------------------------------------------------------------------------
	//  描画処理
	//--------------------------------------------------------------------------------
	void Render(void);

	//--------------------------------------------------------------------------------
	//  次のモードにフェードする
	//	next_mode：次のモード
	//	fade_time：フェードの時間（秒数）
	//--------------------------------------------------------------------------------
	void FadeTo(Mode* next_mode, const float fade_time = 1.0f);

private:
	//--------------------------------------------------------------------------------
	//  列挙型定義
	//--------------------------------------------------------------------------------
	enum FadeState
	{
		kFadeNone = 0,
		kFadeIn,
		kFadeOut
	};

	//--------------------------------------------------------------------------------
	//  constructors and destructors
	//--------------------------------------------------------------------------------
	FadeSystem()
		: current_state_(kFadeIn), next_mode_(nullptr)
		, color_(Color::kBlack), fade_time_(0.0f)
		, time_counter_(0.0f) {}
	FadeSystem(const FadeSystem& value) {}
	FadeSystem& operator=(const FadeSystem& value) {}
	~FadeSystem() {}

	//--------------------------------------------------------------------------------
	//  初期化処理
	//--------------------------------------------------------------------------------
	void Init(void);

	//--------------------------------------------------------------------------------
	//  終了処理
	//--------------------------------------------------------------------------------
	void Uninit(void);

	//--------------------------------------------------------------------------------
	//  フェイドイン処理
	//--------------------------------------------------------------------------------
	void FadeIn(void);

	//--------------------------------------------------------------------------------
	//  フェードアウト処理
	//--------------------------------------------------------------------------------
	void FadeOut(void);

	//--------------------------------------------------------------------------------
	//  変数定義
	//--------------------------------------------------------------------------------
	Color     color_;
	FadeState current_state_;
	Mode*     next_mode_;
	float     fade_time_;
	float     time_counter_;
};