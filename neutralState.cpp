//--------------------------------------------------------------------------------
//	待機ステート
//　NeutralState.h
//	Author : Xu Wenjie
//	Date   : 2017-11-07
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//  インクルードファイル
//--------------------------------------------------------------------------------
#include "main.h"
#include "neutralState.h"
#include "walkState.h"
#include "jumpState.h"
#include "actorController.h"
#include "animator.h"

//--------------------------------------------------------------------------------
//
//	public
//
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//  コンストラクタ
//--------------------------------------------------------------------------------
NeutralState::NeutralState()
	: ActorState("Neutral") {}

//--------------------------------------------------------------------------------
//	関数名：Init
//  関数説明：初期化関数
//	引数：	actor：アクターコントローラ
//	戻り値：なし
//--------------------------------------------------------------------------------
void NeutralState::Init(ActorController& actor)
{
	auto animator = actor.GetAnimator();
	animator->SetAttack(false);
	animator->SetDamaged(false);
	animator->SetMovement(0.0f);
}

//--------------------------------------------------------------------------------
//	関数名：Act
//  関数説明：行動関数
//	引数：	actor：アクターコントローラ
//	戻り値：なし
//--------------------------------------------------------------------------------
void NeutralState::Act(ActorController& actor)
{
	if (actor.GetMovement().SquareMagnitude() > 0.0f)
	{
		actor.Change(new WalkState);
		return;
	}

	if (actor.GetIsJump())
	{
		jump(actor);
		actor.Change(new JumpState);
		return;
	}
}