//--------------------------------------------------------------------------------
//	プレイヤーステートマシン
//　player_state.h
//	Author : Xu Wenjie
//--------------------------------------------------------------------------------
#pragma once
#include "actor_state.h"

//--------------------------------------------------------------------------------
//  アクターステートの基底クラス
//--------------------------------------------------------------------------------
class PlayerState : public ActorState
{
public:
	//--------------------------------------------------------------------------------
	//  constructors for singleton
	//--------------------------------------------------------------------------------
	PlayerState(const String& name) : ActorState(name) {}
	~PlayerState() {}

	//--------------------------------------------------------------------------------
	//  初期化処理
	//--------------------------------------------------------------------------------
	virtual void Init(ActorController& actor) override = 0;

	//--------------------------------------------------------------------------------
	//  終了処理
	//--------------------------------------------------------------------------------
	virtual void Uninit(ActorController& actor) override = 0;

	//--------------------------------------------------------------------------------
	//  更新処理
	//--------------------------------------------------------------------------------
	virtual void Update(ActorController& actor) override
	{
		UpdateInput(actor);
	}

	//--------------------------------------------------------------------------------
	//  後更新処理
	//--------------------------------------------------------------------------------
	virtual void LateUpdate(ActorController& actor) override = 0;

	//--------------------------------------------------------------------------------
	//  コライダートリガーの時呼ばれる
	//--------------------------------------------------------------------------------
	virtual void OnTrigger(ActorController& actor, Collider& self, Collider& other) = 0;

	//--------------------------------------------------------------------------------
	//  コライダー衝突の時呼ばれる
	//--------------------------------------------------------------------------------
	virtual void OnCollision(ActorController& actor, CollisionInfo& info) = 0;

private:
	//--------------------------------------------------------------------------------
	//  操作更新
	//--------------------------------------------------------------------------------
	void UpdateInput(ActorController& actor);
};