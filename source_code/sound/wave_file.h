//--------------------------------------------------------------------------------
//　wave_file.h
//  Author : 徐文杰(KodFreedom)
//--------------------------------------------------------------------------------
#pragma once
#include <XAudio2.h>
#include "../common_setting.h"

//--------------------------------------------------------------------------------
//  wave file基底クラス
//--------------------------------------------------------------------------------
class WaveFile
{
public:
    //--------------------------------------------------------------------------------
    //  コンストラクタとデストラクタ
    //--------------------------------------------------------------------------------
    WaveFile() {}
    virtual ~WaveFile() {}

    //--------------------------------------------------------------------------------
    //  破棄処理
    //--------------------------------------------------------------------------------
    virtual void Release(void);

    //--------------------------------------------------------------------------------
    //  鳴らす処理
    //--------------------------------------------------------------------------------
    virtual void Start(void) = 0;

    //--------------------------------------------------------------------------------
    //  止める処理
    //--------------------------------------------------------------------------------
    void Stop(void);

    //--------------------------------------------------------------------------------
    //  ゲッター
    //--------------------------------------------------------------------------------
    auto GetSourceVoice(void) const { return source_voice_; }
    bool IsOver(void) const;
    bool IsPlaying(void) const;

protected:
    //--------------------------------------------------------------------------------
    //  ロード処理
    //--------------------------------------------------------------------------------
    virtual bool Load(IXAudio2& xaudio, const String& file_path);

    //--------------------------------------------------------------------------------
    //  チャンクのチェック
    //--------------------------------------------------------------------------------
    bool CheckChunk(HANDLE file, DWORD format, DWORD& chunk_size, DWORD& chunk_data_position);

    //--------------------------------------------------------------------------------
    //  チャンクデータの読み込み
    //--------------------------------------------------------------------------------
    DWORD ReadChunkData(HANDLE file, void *buffer, DWORD buffer_size, DWORD buffer_offset);

    //--------------------------------------------------------------------------------
    //  変数定義
    //--------------------------------------------------------------------------------
    IXAudio2SourceVoice * source_voice_ = nullptr;
    DWORD                 size_ = 0;
    DWORD                 bytes_per_second_ = 0;
    DWORD                 data_origin_ = 0;
    int                   count_loop_ = -1;
    HANDLE                file_ = nullptr;
};

//--------------------------------------------------------------------------------
//  wave seクラス
//--------------------------------------------------------------------------------
class WaveSe final : public WaveFile
{
public:
    //--------------------------------------------------------------------------------
    //  コンストラクタとデストラクタ
    //--------------------------------------------------------------------------------
    WaveSe() {}
    virtual ~WaveSe() {}

    //--------------------------------------------------------------------------------
    //  生成処理
    //--------------------------------------------------------------------------------
    static WaveSe* Create(IXAudio2& xaudio, const String& file_path, const int count_loop);

    //--------------------------------------------------------------------------------
    //  破棄処理
    //--------------------------------------------------------------------------------
    void Release(void) override;

    //--------------------------------------------------------------------------------
    //  鳴らす処理
    //--------------------------------------------------------------------------------
    void Start(void) override;

private:
    //--------------------------------------------------------------------------------
    //  ロード処理
    //--------------------------------------------------------------------------------
    bool Load(IXAudio2& xaudio, const String& file_path) override;

    //--------------------------------------------------------------------------------
    //  変数定義
    //--------------------------------------------------------------------------------
    vector<BYTE> data_;
};

//--------------------------------------------------------------------------------
//  wave bgmクラス
//--------------------------------------------------------------------------------
class WaveBgm final : public WaveFile
{
public:
    //--------------------------------------------------------------------------------
    //  コンストラクタとデストラクタ
    //--------------------------------------------------------------------------------
    WaveBgm() {}
    virtual ~WaveBgm() {}

    //--------------------------------------------------------------------------------
    //  生成処理
    //--------------------------------------------------------------------------------
    static WaveBgm* Create(IXAudio2& xaudio, const String& file_path, const int count_loop);

    //--------------------------------------------------------------------------------
    //  破棄処理
    //--------------------------------------------------------------------------------
    void Release(void) override;

    //--------------------------------------------------------------------------------
    //  鳴らす処理
    //--------------------------------------------------------------------------------
    void Start(void) override;

    //--------------------------------------------------------------------------------
    //  ポーリング処理
    //--------------------------------------------------------------------------------
    void Polling(void);

private:
    //--------------------------------------------------------------------------------
    //  ロード処理
    //--------------------------------------------------------------------------------
    bool Load(IXAudio2& xaudio, const String& file_path) override;

    //--------------------------------------------------------------------------------
    //  プライマリとセカンダリのフリップ
    //--------------------------------------------------------------------------------
    void AddNextBuffer(void);

    //--------------------------------------------------------------------------------
    //  プライマリとセカンダリのフリップ
    //--------------------------------------------------------------------------------
    void Flip(void);

    //--------------------------------------------------------------------------------
    //  変数定義
    //--------------------------------------------------------------------------------
    vector<BYTE> datas_[2];
    int          primary_ = 0;      // 現在再生中のバッファ
    int          secondary_ = 1;    // 新しいデータの書き込み可能なバッファ
    DWORD        write_cursor_ = 0; // 書き込みカーソル

};