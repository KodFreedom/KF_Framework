//--------------------------------------------------------------------------------
//　resource_manager.cpp
//  リソース管理者
//  Author : 徐文杰(KodFreedom)
//--------------------------------------------------------------------------------
#include "resource_manager.h"

//--------------------------------------------------------------------------------
//
//  Public
//
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//  破棄処理
//--------------------------------------------------------------------------------
void ResourceManager::Release(void)
{
    Uninit();
    MY_DELETE this;
}

//--------------------------------------------------------------------------------
//  与えられた名前のリソースの利用開始
//--------------------------------------------------------------------------------
void ResourceManager::Use(const String& resource_name)
{
    if (resource_name.empty()) return;
    lock_guard<mutex> lock(mutex_);
    load_tasks_.push(resource_name);
}

//--------------------------------------------------------------------------------
//  与えられた名前のリソースの利用終了
//--------------------------------------------------------------------------------
void ResourceManager::Disuse(const String& resource_name)
{
    if (resource_name.empty()) return;
    lock_guard<mutex> lock(mutex_);
    release_tasks_.push(hash<String>()(resource_name));
}

//--------------------------------------------------------------------------------
//
//  Private
//
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//  マルチスレッド処理
//--------------------------------------------------------------------------------
void ResourceManager::Run(void)
{
    LoadResource();
    ReleaseResource();
}