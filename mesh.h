//--------------------------------------------------------------------------------
//	メッシュコンポネント
//　mesh.h
//	Author : Xu Wenjie
//	Date   : 2017-05-21
//--------------------------------------------------------------------------------
#pragma once

//--------------------------------------------------------------------------------
//  インクルードファイル
//--------------------------------------------------------------------------------
#include "component.h"

//--------------------------------------------------------------------------------
//  クラス宣言
//--------------------------------------------------------------------------------
class Mesh : public Component
{
public:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	Mesh(GameObject* const owner)
		: Component(owner)
	{
		meshName.clear();
	}
	~Mesh() {}

	virtual bool	Init(void) override { return true; }
	virtual void	Uninit(void) override;
	virtual void	Update(void) {}

	//Set関数
	void			SetMeshName(const string& name);

	//Get関数
	const string&	GetMeshName(void) const { return meshName; }

protected:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	Mesh() : Component() {}

	//--------------------------------------------------------------------------------
	//  変数定義
	//--------------------------------------------------------------------------------
	string meshName;
};

//--------------------------------------------------------------------------------
//  ヌルメッシュコンポネントクラス
//--------------------------------------------------------------------------------
class NullMesh : public Mesh
{
public:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	NullMesh() : Mesh() {}
	~NullMesh() {}

	bool	Init(void) override { return true; }
	void	Uninit(void) override {}
	void	Update(void) override {}
	void	Release(void) override {}
};