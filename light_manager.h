//--------------------------------------------------------------------------------
//　light_manager.h
//  manage the lights' save, load
//	ライト管理者
//	Author : 徐文杰(KodFreedom)
//--------------------------------------------------------------------------------
#pragma once
#include "light.h"

//--------------------------------------------------------------------------------
//  ライト管理者クラス
//--------------------------------------------------------------------------------
class LightManager
{
public:
	//--------------------------------------------------------------------------------
	//  生成処理
	//  return : MaterialManager*
	//--------------------------------------------------------------------------------
	static LightManager* Create(void)
	{
		auto instance = MY_NEW LightManager();
		return instance;
	}

	//--------------------------------------------------------------------------------
	//  破棄処理
	//--------------------------------------------------------------------------------
	void Release(void) { Clear(); }

	//--------------------------------------------------------------------------------
	//  全ライトのセット処理
	//--------------------------------------------------------------------------------
	void SetLight(void)
	{
		shadow_map_light_.Set();
	}

	//--------------------------------------------------------------------------------
	//  シャドウマップライトの取得
	//  return : ShadowMapLight&
	//--------------------------------------------------------------------------------
	auto& GetShadowMapLight(void) { return shadow_map_light_; }

	//--------------------------------------------------------------------------------
	//  ライトの削除
	//--------------------------------------------------------------------------------
	void Clear(void)
	{
	}

private:
	//--------------------------------------------------------------------------------
	//  constructors and destructors
	//--------------------------------------------------------------------------------
	LightManager() {}
	LightManager(const LightManager& value) {}
	LightManager& operator=(const LightManager& value) {}
	~LightManager() {}

	//--------------------------------------------------------------------------------
	//  変数定義
	//--------------------------------------------------------------------------------
	ShadowMapLight shadow_map_light_;
};