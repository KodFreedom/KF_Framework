//--------------------------------------------------------------------------------
//
//　gameObjManager.cpp
//	Author : Xu Wenjie
//	Date   : 2017-5-10
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//  インクルードファイル
//--------------------------------------------------------------------------------
#include "gameObjectManager.h"
#include "gameObject.h"

//--------------------------------------------------------------------------------
//  クラス
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//
//  Public
//
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//  コンストラクタ
//--------------------------------------------------------------------------------
CGameObjectManager::CGameObjectManager()
{
	for (auto& list : m_aListGameObject){ list.clear(); }
}

//--------------------------------------------------------------------------------
//  リリース処理
//--------------------------------------------------------------------------------
void CGameObjectManager::ReleaseAll(void)
{
	for (auto& list : m_aListGameObject)
	{
		for (auto itr = list.begin(); itr != list.end();)
		{
			(*itr)->Release();
			itr = list.erase(itr);
		}
	}
}

//--------------------------------------------------------------------------------
//  更新処理
//--------------------------------------------------------------------------------
void CGameObjectManager::Update(void)
{
	for (auto& list : m_aListGameObject)
	{
		for (auto itr = list.begin(); itr != list.end();)
		{//生きてないオブジェクトを削除
			if (!(*itr)->m_bAlive)
			{
				(*itr)->Release();
				itr = list.erase(itr);
			}
			else { ++itr; }
		}
	}

	for (auto& list : m_aListGameObject)
	{
		for (auto pObj : list)
		{
			pObj->Update();
		}
	}
}

//--------------------------------------------------------------------------------
//  更新処理(描画直前)
//--------------------------------------------------------------------------------
void CGameObjectManager::LateUpdate(void)
{
	for (auto& list : m_aListGameObject)
	{
		for (auto pObj : list)
		{
			pObj->LateUpdate();
		}
	}
}

//--------------------------------------------------------------------------------
//  ゲームオブジェクトの確保
//--------------------------------------------------------------------------------
void CGameObjectManager::Register(CGameObject* pGameObj, const GOMLAYER& layer)
{
	m_aListGameObject[layer].push_back(pGameObj);
}

//--------------------------------------------------------------------------------
//
//  Private
//
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//  終了処理
//--------------------------------------------------------------------------------
void CGameObjectManager::uninit(void)
{
	ReleaseAll();
}