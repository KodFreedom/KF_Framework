//--------------------------------------------------------------------------------
//	
//　motionState.h
//	Author : Xu Wenjie
//	Date   : 2017-09-20
//--------------------------------------------------------------------------------
#pragma once

//--------------------------------------------------------------------------------
//  インクルードファイル
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//  前方宣言
//--------------------------------------------------------------------------------
class Animator;
class MotionInfo;

//--------------------------------------------------------------------------------
//  クラス宣言
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//  スーパークラス
//--------------------------------------------------------------------------------
class MotionState
{
public:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	MotionState(const string& motionName, const int currentFrame);
	~MotionState() {};

	virtual void Update(Animator& animator) = 0;
	const auto&  GetMotionName(void) { return currentMotionName; }

protected:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	virtual void changeState(Animator& animator) = 0;

	//--------------------------------------------------------------------------------
	//  変数定義
	//--------------------------------------------------------------------------------
	MotionInfo*	 currentMotionInfo;
	int			 currentFrame;
	const string currentMotionName;
};

//--------------------------------------------------------------------------------
//  ノーマルモーション
//--------------------------------------------------------------------------------
class NormalMotionState : public MotionState
{
public:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	NormalMotionState(const string& motionName, const int currentFrame)
		: MotionState(motionName, currentFrame) {}
	~NormalMotionState() {}

	void Update(Animator& animator) override;

protected:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	virtual void changeState(Animator& animator) override = 0;
};

//--------------------------------------------------------------------------------
//  ブレンドモーション
//--------------------------------------------------------------------------------
class BlendMotionState : public MotionState
{
public:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	BlendMotionState(const string& currentMotionName, const string& nextMotionName, const int currentFrame, const int blendFrameNumber = 10);
	~BlendMotionState() {}

	void Update(Animator& animator) override;

protected:
	//--------------------------------------------------------------------------------
	//  関数定義
	//--------------------------------------------------------------------------------
	virtual void changeState(Animator& animator) override = 0;

	//--------------------------------------------------------------------------------
	//  変数定義
	//--------------------------------------------------------------------------------
	int			currentNextMotionFrame;
	int			currentBlendFrame;
	int			blendFrameNumber;
	MotionInfo* nextMotionInfo;
};